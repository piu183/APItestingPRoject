{
	"info": {
		"_postman_id": "8f88cd08-9df0-42d6-9723-3138ae65efcf",
		"name": "Protocol1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32322237",
		"_collection_link": "https://blue-comet-155084.postman.co/workspace/Farjana-Binta-Faruk~67106ff8-e816-4552-9643-5a9f6fa902fc/collection/32322237-8f88cd08-9df0-42d6-9723-3138ae65efcf?action=share&source=collection_link&creator=32322237"
	},
	"item": [
		{
			"name": "Create",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"pm.globals.get(\"variable_key\");\r",
							"\r",
							"\r",
							"//date\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"//console.log(today.subtract(4,'d').format(\"DD-MM-YYYY HH:mm:ss\"))\r",
							"//.log(today.add(4,'d').add(3,'M').format(\"DD-MM-YYYY\"))\r",
							"let number = Math.floor(Math.random()*10);\r",
							"var checkin = today.add(number,'d').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"console.log(checkin)\r",
							"\r",
							"let number1 = Math.floor(Math.random()*10);\r",
							"var checkout = today.add(number1,'d').add(number1,'MM').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"console.log(checkout)\r",
							"\r",
							"\r",
							"var totalprice = pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"console.log(totalprice)\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"\r",
							"var depositpaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositpaid)\r",
							"pm.environment.set(\"depositpaid\",depositpaid)\r",
							"\r",
							"var additionalneeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"console.log(additionalneeds)\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\",jsonData.bookingid)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\": \"{{totalprice}}\",\r\n\t\"depositpaid\" : \"{{depositpaid}}\",\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalneeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statuscode = pm.response.code\r",
							"pm.globals.set(\"variable_key\", \"variable_value\");\r",
							"console.log(statuscode)\r",
							"\r",
							"switch(statuscode){\r",
							"\r",
							"    case 200:\r",
							"\r",
							"\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"        pm.test(\"First Name Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"firstName\")).to.equal(jsonData.firstname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Last Name Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"lastName\")).to.equal(jsonData.lastname)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Total Price Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"totalprice\")).to.string(jsonData.totalprice)\r",
							"        })\r",
							"\r",
							"        pm.test(\"Checkin Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.checkin.toString())})\r",
							"\r",
							"        pm.test(\"Checkout Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"checkout\")).to.eql(jsonData.checkout.toString())})\r",
							"\r",
							"        pm.test(\"Deposit Paid Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"depositpaid\")).to.eql(jsonData.depositpaid.toString())\r",
							"        })\r",
							"\r",
							"\r",
							"        pm.test(\"Additional Needs Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"additionalneeds\")).to.string(jsonData.additionalneeds)\r",
							"        })\r",
							"break;\r",
							"\r",
							"case 404:\r",
							"pm.test(\"Not Found\")\r",
							"break;\r",
							"\r",
							"case 500:\r",
							"pm.test(\"Internal Server Error\")\r",
							"break;\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var json = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"accessToken\",json.token)"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "",
						"value": "",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(firstName)\r",
							"pm.environment.set(\"firstName\",firstName)\r",
							"\r",
							"var lastName = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(lastName)\r",
							"pm.environment.set(\"lastName\",lastName)\r",
							"\r",
							"pm.globals.get(\"variable_key\");\r",
							"\r",
							"\r",
							"//date\r",
							"const date = require('moment')\r",
							"const today = date()\r",
							"//console.log(today.subtract(4,'d').format(\"DD-MM-YYYY HH:mm:ss\"))\r",
							"//.log(today.add(4,'d').add(3,'M').format(\"DD-MM-YYYY\"))\r",
							"let number = Math.floor(Math.random()*10);\r",
							"var checkin = today.add(number,'d').format(\"YYY-MM-DD\")\r",
							"pm.environment.set(\"checkin\",checkin)\r",
							"console.log(checkin)\r",
							"\r",
							"let number1 = Math.floor(Math.random()*10);\r",
							"var checkout = today.add(number1,'d').add(number1,'MM').format(\"YYYY-MM-DD\")\r",
							"pm.environment.set(\"checkout\",checkout)\r",
							"console.log(checkout)\r",
							"\r",
							"\r",
							"var totalprice = pm.variables.replaceIn(\"{{$randomPrice}}\")\r",
							"console.log(totalprice)\r",
							"pm.environment.set(\"totalprice\",totalprice)\r",
							"\r",
							"var depositepaid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(depositepaid)\r",
							"pm.environment.set(\"depositepaid\",depositepaid)\r",
							"\r",
							"var additionalneeds = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"console.log(additionalneeds)\r",
							"pm.environment.set(\"additionalneeds\",additionalneeds)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statuscode = pm.response.code\r",
							"\r",
							"if(statuscode ==401 || statuscode ==403){\r",
							"pm.test(\"Token\")\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"Farhana\",\r\n\t\"lastname\" : \"Orpa\",\r\n\t\"totalprice\" : 111,\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"2018-01-01\",\r\n    \t\"checkout\" : \"2019-01-01\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify after Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var statuscode = pm.response.code\r",
							"\r",
							"if (statuscode==200){\r",
							"\r",
							"        var jsonData = pm.response.json()\r",
							"        pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"        });\r",
							"\r",
							"        pm.test(\"First Name Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"firstName\")).to.equal(jsonData.firstname)\r",
							"        });\r",
							"\r",
							"        pm.test(\"Last Name Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"lastName\")).to.equal(jsonData.lastname)\r",
							"        });\r",
							"\r",
							"        pm.test(\"Total Price Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"totalprice\")).to.string(jsonData.totalprice)\r",
							"        });\r",
							"\r",
							"        pm.test(\"Deposit Paid Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"depositpaid\")).to.eql(jsonData.depositpaid.toString())\r",
							"        });\r",
							"\r",
							"        pm.test(\"Additional Needs Validation\",function(){\r",
							"        pm.expect(pm.environment.get(\"additionalneeds\")).to.string(jsonData.additionalneeds)\r",
							"        })\r",
							"             \r",
							"}else if(statuscode==400)\r",
							"{\r",
							"    pm.test(\"Not Found\")\r",
							"}\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{accessToken}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"Farjana\",\r\n\t\"lastname\" : \"Piu\",\r\n\t\"totalprice\" : 111,\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"2018-01-01\",\r\n    \t\"checkout\" : \"2019-01-01\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify after delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}